syntax = "proto3";
package furynetwork.fury.orderbook;

import "gogoproto/gogo.proto";

option go_package = "github.com/fanfury-sports/fury/x/orderbook/types";

// BookOddsExposure represents the exposures taken on odds
message BookOddsExposure {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  // book_uid is the unique identifier corresponding to the book
  string book_uid = 1 [
    (gogoproto.customname) = "BookUID",
    (gogoproto.jsontag) = "book_uid",
    json_name = "book_uid"
  ];

  // odds_uid is odds uid
  string odds_uid = 2 [
    (gogoproto.customname) = "OddsUID",
    (gogoproto.jsontag) = "odds_uid",
    json_name = "odds_uid"
  ];

  repeated uint64 fulfillment_queue = 3
      [ (gogoproto.moretags) = "yaml:\"fulfillment_queue\"" ];
}

// ParticipationExposure represents the exposures taken on odds by
// participations
message ParticipationExposure {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  // book_uid is the unique identifier corresponding to the book
  string book_uid = 1 [
    (gogoproto.customname) = "BookUID",
    (gogoproto.jsontag) = "book_uid",
    json_name = "book_uid"
  ];

  // odds_uid is odd's uid
  string odds_uid = 2 [
    (gogoproto.customname) = "OddsUID",
    (gogoproto.jsontag) = "odds_uid",
    json_name = "odds_uid"
  ];

  // participation_index is the id of initial participation queue
  uint64 participation_index = 3
      [ (gogoproto.moretags) = "yaml:\"participation_index\"" ];

  // exposure is the total exposure taken on given odd
  string exposure = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"exposure\""
  ];

  // bet_amount is the total bet amount corresponding to the exposure
  string bet_amount = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"bet_amount\""
  ];

  bool is_fulfilled = 6 [ (gogoproto.moretags) = "yaml:\"is_fulfilled\"" ];

  // number of current round in queue
  uint64 round = 7 [ (gogoproto.moretags) = "yaml:\"round\"" ];
}
