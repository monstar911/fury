syntax = "proto3";
package sgenetwork.sge.bet;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "sge/bet/odds_type.proto";

option go_package = "github.com/sge-network/sge/x/bet/types";

// Bet is the main type of bet in the blockchain state.
message Bet {

  // uid is the universal unique identifier assigned to a bet.
  string uid = 1 [
    (gogoproto.customname) = "UID",
    (gogoproto.jsontag) = "uid",
    json_name = "uid"
  ];

  // sport_event_uid is the universal unique identifier of
  // the sport-event on which the bet is placed.
  string sport_event_uid = 2 [
    (gogoproto.customname) = "SportEventUID",
    (gogoproto.jsontag) = "sport_event_uid",
    json_name = "sport_event_uid"
  ];

  // odds_uid is the unique universal unique identifier,
  // of the odds on which the bet is placed.
  string odds_uid = 3 [
    (gogoproto.customname) = "OddsUID",
    (gogoproto.jsontag) = "odds_uid",
    json_name = "odds_uid"
  ];

  // odds_type is the type of odds that
  // user choose such as decimal, fractional.
  sgenetwork.sge.bet.OddsType odds_type = 4;

  // odds_value is the odds on which the bet is placed.
  string odds_value = 5;

  // amount is the wager amount.
  string amount = 6 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  // bet_fee is the betting fee calculated by the bet amount.
  cosmos.base.v1beta1.Coin bet_fee = 7 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.nullable) = false
  ];

  // status is the status of the bet, such as `unspecified` or `settled`.
  Status status = 8;

  // result is the result of the bet, such as `won` or `lost`.
  Result result = 9;

  // verified shows bet is verified or not.
  bool verified = 10;

  // ticket is a signed string containing important info such as `odds_value`.
  string ticket = 11;

  // creator is the bettor address.
  string creator = 12;

  // created_at is the bet placement timestamp.
  int64 created_at = 13;

  // Status of the Bet.
  enum Status {

    // unknown status
    STATUS_UNSPECIFIED = 0;

    // bet is placed
    STATUS_PLACED = 1;

    // bet is canceled by Bettor
    STATUS_CANCELLED = 2;

    // bet is aborted
    STATUS_ABORTED = 3;

    // bet is pending for getting placed
    STATUS_PENDING = 4;

    // bet result is declared
    STATUS_RESULT_DECLARED = 5;

    // the bet is settled
    STATUS_SETTLED = 6;
  }

  // Result of the bet.
  enum Result {

    // the invalid or unknown
    RESULT_UNSPECIFIED = 0;

    // bet result is pending
    RESULT_PENDING = 1;

    // bet won by the bettor
    RESULT_WON = 2;

    // bet lost by the bettor
    RESULT_LOST = 3;

    // bet is draw
    RESULT_DRAW = 4;

    // bet is aborted
    RESULT_ABORTED = 5;
  }
}

// UID2ID is the type for mapping UIDs and Sequencial IDs of bets.
message UID2ID {

  // uid is the universal unique identifier assigned to the bet.
  string uid = 1 [
    (gogoproto.customname) = "UID",
    (gogoproto.jsontag) = "uid",
    json_name = "uid"
  ];

  // id is an autogenerated sequential id for a bet.
  uint64 id = 2 [
    (gogoproto.customname) = "ID",
    (gogoproto.jsontag) = "id",
    json_name = "id"
  ];
}
